package java.sql

/**
 * A table of data representing a database result set, which is usually generated by
 * executing a statement that queries the database.
 */
trait ResultSet extends AutoCloseable {
  /**
   * Moves the cursor forward one row from its current position.
   */
  def next(): Boolean

  /**
   * Releases this ResultSet object's database and JDBC resources immediately.
   */
  def close(): Unit

  /**
   * Retrieves whether the cursor is before the first row in this ResultSet object.
   */
  def isBeforeFirst(): Boolean

  /**
   * Retrieves whether the cursor is after the last row in this ResultSet object.
   */
  def isAfterLast(): Boolean

  /**
   * Retrieves whether the cursor is on the first row of this ResultSet object.
   */
  def isFirst(): Boolean

  /**
   * Retrieves whether the cursor is on the last row of this ResultSet object.
   */
  def isLast(): Boolean

  /**
   * Retrieves the current row number.
   */
  def getRow(): Int

  /**
   * Maps the given ResultSet column label to its ResultSet column index.
   */
  def findColumn(columnLabel: String): Int

  // Column value getters
  def getString(columnIndex: Int): String
  def getShort(columnIndex: Int): Short
  def getInt(columnIndex: Int): Int
  def getLong(columnIndex: Int): Long
  def getDouble(columnIndex: Int): Double
  def getFloat(columnIndex: Int): Float
  def getBoolean(columnIndex: Int): Boolean
  def getBytes(columnIndex: Int): scala.Array[Byte]
  def wasNull(): Boolean

  // Column value getters by column name
  def getString(columnLabel: String): String
  def getShort(columnLabel: String): Short
  def getInt(columnLabel: String): Int
  def getLong(columnLabel: String): Long
  def getDouble(columnLabel: String): Double
  def getFloat(columnLabel: String): Float
  def getBoolean(columnLabel: String): Boolean
  def getBytes(columnLabel: String): scala.Array[Byte]
}

object ResultSet {
  // ResultSet type
  final val TYPE_FORWARD_ONLY = 1003
  final val TYPE_SCROLL_INSENSITIVE = 1004
  final val TYPE_SCROLL_SENSITIVE = 1005

  // ResultSet concurrency
  final val CONCUR_READ_ONLY = 1007
  final val CONCUR_UPDATABLE = 1008

  // ResultSet holdability
  final val HOLD_CURSORS_OVER_COMMIT = 1
  final val CLOSE_CURSORS_AT_COMMIT = 2
} 
